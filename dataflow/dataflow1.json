{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_emp_csv",
						"type": "DatasetReference"
					},
					"name": "employee"
				},
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_dept_csv",
						"type": "DatasetReference"
					},
					"name": "department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adlsgen2_target_csv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Sort1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\tEMPNO as string,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as string,\n\t\tHIREDATE as string,\n\t\tSAL as string,\n\t\tCOMM as string,\n\t\tDEPTNO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> employee\nsource(output(\n\t\tDeptno as string,\n\t\tDname as string,\n\t\tLoc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> department\nemployee, department join(employee@DEPTNO == department@Deptno,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nJoin1 sort(asc(employee@DEPTNO, true)) ~> Sort1\nSort1 select(mapColumn(\n\t\tEMPNO,\n\t\tENAME,\n\t\tJOB,\n\t\tMGR,\n\t\tHIREDATE,\n\t\tSAL,\n\t\tCOMM,\n\t\tDEPTNO = employee@DEPTNO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(total_salary = toInteger(SAL) + iifNull(toInteger(COMM),0)) ~> DerivedColumn1\nDerivedColumn1 filter(total_salary>1500) ~> Filter1\nFilter1 aggregate(groupBy(JOB),\n\tSum_Of_Sal_By_Job = sum(total_salary)) ~> Aggregate1\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['jobwisesal.csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}